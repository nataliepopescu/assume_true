; ModuleID = 'forpaper.5r7vwc02-cgu.0'
source_filename = "forpaper.5r7vwc02-cgu.0"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ""
module asm "            .section .llvmbc,\22e\22"
module asm "            .section .llvmcmd,\22e\22"
module asm "        "

%"core::panic::Location" = type { [0 x i64], { [0 x i8]*, i64 }, [0 x i32], i32, [0 x i32], i32, [0 x i32] }
%"unwind::libunwind::_Unwind_Exception" = type { [0 x i64], i64, [0 x i64], void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [0 x i64], [6 x i64], [0 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc36 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"src/lib.rs" }>, align 1
@alloc29 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc36, i32 0, i32 0, i32 0), [16 x i8] c"\0A\00\00\00\00\00\00\00\0F\00\00\00\09\00\00\00" }>, align 8
@alloc33 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc36, i32 0, i32 0, i32 0), [16 x i8] c"\0A\00\00\00\00\00\00\00$\00\00\00\0D\00\00\00" }>, align 8
@alloc37 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc36, i32 0, i32 0, i32 0), [16 x i8] c"\0A\00\00\00\00\00\00\00(\00\00\00\0D\00\00\00" }>, align 8
@rustc.embedded.module = private constant [9436 x i8] c"BC\C0\DE5\14\00\00\05\00\00\00b\0C0$IY\BEf\EF\D3~-D\012\05\00\00\00\00!\0C\00\00u\08\00\00\0B\02!\00\02\00\00\00\16\00\00\00\07\81#\91A\C8\04I\06\1029\92\01\84\0C%\05\08\19\1E\04\8Bb\80\18E\02B\92\0BB\C4\102\148\08\18K\0A2b\88Hp\C4!#D\12\87\8C\10A\92\02d\C8\08\B1\14 CF\88 \C9\012b\84\18*(*\901|\B0\5C\91 \C6\C8\00\00\00\89 \00\00I\00\00\002\22\88\09 d\85\04\13#\A4\84\04\13#\E3\84\A1\90\14\12L\8C\8C\0B\84\C4L\10\B4\C1\1C\01\92\0A\80\0D\02\12\08H\08\C0\0ADA\C6\08@\02\12O\00\94\94\01Q\14Z\12\00\A0f\8E\00\14J\818\8F\F3\104G\10\94\02!\88G\A2i\8E\00\0C\12\E0\A1\AD\0CHu\11\96\06\CFLdP\0F\EEp\0F\E9\E0\0E\E4\A0\07z\C0\0E\E9 \0E\F5\E0\0E\F7\90\0E\EE@\0Ez\A0\07\BFP\0B\EEp\0F\E9\E0\0E\E4\F0\0B\A5\80\0F\E3P\0E\F0@\0F\E9\F0\0E\EE\80\0E\EB\B12K\B3f\12\83zp\87{H\07w \07=\D0\03vH\07q\A8\07w\B8\87tp\07r\D0\03=\F8\85Zp\87{H\07w \87_\18\85wp\07z(\07|\A0\07\144\C4\15\A3\AA\AA\E7\EA\C83\82\F3$@5S5\0E\EF \0F\E5\A0\07z\00\0F\E1\E0\0E\E90\0Ez\A0\07\AC\F0\0E\E3\10\0E\F4\90\0E\EF\E0\0E\E8\B0\C0\B0\0A\AB\90\C4B \CF3\129\10P\08\C44M:I2\C2\F3\90:\05\00\00Q\18\00\00_\00\00\00\1B\F0 \F8\FF\FF\FF\FF\01x\800 \E0A\1E\DEA\1C\CA\A1\0D\E6\81\1E\C2a\1C\D6\01\F8\85_\90\87z\98\07z\F8\05x\90\87w\10\87r\98\07z\08\87qX\07\80\A0\87p\90\87s(\07zh\83q\80\87z\00\F0\01\0F\EC\A0\0D\EC\80\0E\80\0D\8E\10\00\09\B0\00U\10\04A\1A\800\9ElP\06\01X\82 \08\D2\00\84\F1dCC\04@\02,\C0\19\00U\10\04\1B\92b\00\16\E0\0C\82 \D8\A0\07\C6\FF\FF\FF\FF\0F\80\04<@\18\10\F0 \0F\EF \0E\E5\D0\06\F3@\0F\E10\0E\EB\00\FC\C2/\C8C=\CC\03=\FC\02<\C8\C3;\88C9\CC\03=\84\C38\AC\03@\D0C8\C8\C39\94\03=\B4\C18\C0C=\00\F8\80\07v\D0\06v@\07\C0\06\E3\F8\FF\FF\FF\FF\01h\03@\DA` \01\B0\00t\B0\C1H\04`\01\AA\0D\84B\00|\B0\C1\0F\96\FF\FF\FF\FF\1F\002\00\1C \02\1E \0C\08x\90\87w\10\87rh\83y\A0\87p\18\87u\00~\E1\17\E4\A1\1E\E6\81\1E~\01\1E\E4\E1\1D\C4\A1\1C\E6\81\1E\C2a\1C\D6\01 \E8!\1C\E4\E1\1C\CA\81\1E\DA`\1C\E0\A1\1E\00|\C0\03;h\03;\A0\03`\03\C3\0C@\02TA\80\04i\80m@\9A\FF\FF\FF\FF\1F\00\09\A0\80:\D8p8\01p\06A\10l8\1E\018\83 \08\00\00\00\00I\18\00\00\09\00\00\00\13\86@\18&\0C\01QL\18\0C\A2\98@\1CH\A2L\08\8C\09\C2\C2L\08\9A\09\82\F3L\08\18\00\00\00\00\130|\C0\03;\F8\05;\A0\836\A8\07wX\07wx\87{p\876`\87tp\87z\C0\8768\07w\A8\87\0DeP\0Em\D0\0EzP\0Em\90\0Ev@\07z`\07t\D0\06\E6\80\07p\A0\07q \07x\D0\06\EE\80\07z\10\07v\A0\07s \07z`\07t\D0\06\B3\10\07r\80\07J\0F\08\11\92A\86\8C\14\19\014B\98\9C^\E6\B7\1C\1E\86\97\E5\AE\9A\FCf\BF\8Fa\B2\D6\F8\5Cw\C1vH\C0!\0CX\12\00\00\10\00\00\00\04\07\B0C:\0Ec\E8\12\02\00\80\00\00\00 8\80\1D\92s\18\83\97\10\00\00\04\00\00\00\C1\01\EC\90\AA\C3\18\BE\84\00\00 \00\00\00\08\0E`H\C5)\0B\00\00\01\00\00@\00\00\00\A0\00\C0\01\0C\A9\CC\80\81\00\00\10\00\00\00\02\00\00\00\05\00\0E`H%\07\08\04\00\C0\00\00\00\10\00\00\00(\00p\00C*=p \00\00\04\00\00\80\00\00\00@\01\80\03\18R\A1B6\01\01@\00\00\00\00\00\00\00\00\00\1C\C0\90*\1C&\0F\08\80\02\00\00 \00\00\00\00\00\E0\00\86T\F4\A0\07d\00\04\80\01\00\00\10\00\00\00\00\00p\00C*\B7p\CE\00\08\80\03\00\00\00\00\00\00\00\00\E0\00$6\08\14\8EC\00\00\C8\02\01\00\00\00\22\00\00\002\1E\98\18\19\11L\90\8C\09&G\C6\04Cz\0A\10\F1d\04\A0\04\A8\1A\01(\87\22(\812\98\01(\D0\0F\0AR\99\93\1B{aK\13s\91\9B#\01\03\8B\88\A1\12a\00\AA\A7z\AA\87\8A\84\14\00\00\00\00\00\00\00\1E\00\00\00\12\00\00\00\12R\00\00\00\00\00\00\00 \01\00\00h\00\00\00HH\01\00\00\00\00\00\00\00\05\00\00\A0\01\00\00\80\0C\14\B0\0C\05LC\01\DB(\1D\01\A0u\06\00\00\00\00\00\B1\18\00\00\89\00\00\003\08\80\1C\C4\E1\1Cf\14\01=\88C8\84\C3\8CB\80\07yx\07s\98q\0C\E6\00\0F\ED\10\0E\F4\80\0E3\0CB\1E\C2\C1\1D\CE\A1\1Cf0\05=\88C8\84\83\1B\CC\03=\C8C=\8C\03=\CCx\8Ctp\07{\08\07yH\87pp\07zp\03vx\87p \87\19\CC\11\0E\EC\90\0E\E10\0Fn0\0F\E3\F0\0E\F0P\0E3\10\C4\1D\DE!\1C\D8!\1D\C2a\1Ef0\89;\BC\83;\D0C9\B4\03<\BC\83<\84\03;\CC\F0\14v`\07{h\077h\87rh\077\80\87p\90\87p`\07v(\07v\F8\05vx\87w\80\87_\08\87q\18\87r\98\87y\98\81,\EE\F0\0E\EE\E0\0E\F5\C0\0E\EC0\03b\C8\A1\1C\E4\A1\1C\CC\A1\1C\E4\A1\1C\DCa\1C\CA!\1C\C4\81\1D\CAa\06\D6\90C9\C8C9\98C9\C8C9\B8\C38\94C8\88\03;\94\C3/\BC\83<\FC\82;\D4\03;\B0\C3\0C\C7i\87pX\87rp\83th\07x`\87t\18\87t\A0\87\19\CES\0F\EE\00\0F\F2P\0E\E4\90\0E\E3@\0F\E1 \0E\ECP\0E3 (\1D\DC\C1\1E\C2A\1E\D2!\1C\DC\81\1E\DC\E0\1C\E4\E1\1D\EA\01\1Ef\18Q8\B0C:\9C\83;\CCP$v`\07{h\077`\87wx\07x\98QL\F4\90\0F\F0P\0E3\1Ej\1E\CAa\1C\E8!\1D\DE\C1\1D~\01\1E\E4\A1\1C\CC!\1D\F0a\06T\85\838\CC\C3;\B0C=\D0C9\FC\C2<\E4C;\88\C3;\B0\C3\8C\C5\0A\87y\98\87w\18\87t\08\07z(\07r\98\81\5C\E3\10\0E\EC\C0\0E\E5P\0E\F30#\C1\D2A\1E\E4\E1\17\D8\E1\1D\DE\01\1EfH\19;\B0\83=\B4\83\1B\84\C38\8CC9\CC\C3<\B8\C19\C8\C3;\D4\03<\CCH\B4q\08\07v`\07q\08\87qX\87\19\DB\C6\0E\EC`\0F\ED\E0\06\F0 \0F\E50\0F\E5 \0F\F6P\0En\10\0E\E30\0E\E50\0F\F3\E0\06\E9\E0\0E\E4P\0E\F8\00\00\00\00y \00\00|\02\00\00r\1EH C\88\0C\19\09r2H #\81\8C\91\91\D1D\A0\10(d<12B\8E\90!\A3h\0A\A8@\AF\01\00\00\C9\22)dP\06`\80\08\C3@$\C4P0E1\0C``\0CA\81$\06\18$`@\B8\01\18\8C\01\B2\D0\84\D1\10\81\19\10\83\19\B4\C1\00\06Ap\06`0\14\029\10F\11\F5\C2\1A\80\C1\D0\A0\C2\E0\00\00\00\00PIC LevelRtLibUseGOTDebug Info Versionsrc/lib.rs/benchdata/rust/assume_true/forpaperclang LLVM (rustc version 1.46.0-dev)7ef5767a139611e772e5867ff07caf3fforpaperu8srcdstiter<unknown>coreopsrangeRange<usize>startusizeendIdx4be1f8843c4abc6e6b0755e50f9e3873__nextvali&[u8]data_ptr*const u8length585202bcfc7dfd1dd72e8befe2491ee4&mut [u8]7596319ecf86f60af9b48d8c05ebf9f7self/benchdata/rust/rust/src/libcore/iter/range.rscccabf57d1b2ffaf9873830757e526c9&mut core::ops::range::Range<usize>{{impl}}next<usize>_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h40129f595cf302abEoptionOption<usize>NoneTedae92f6aa2d4d3d8225245fd9f15299::NoneSome__0edae92f6aa2d4d3d8225245fd9f15299::Someedae92f6aa2d4d3d8225245fd9f15299_variant_partu64edae92f6aa2d4d3d8225245fd9f15299nA/benchdata/rust/rust/src/libcore/cmp.rsa4329b033234040c2caa81654f112278cmpimplslt_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h697d7385366f3475Ebool&usizeotherforward_unchecked_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hf3e4aa5239d3229aE/benchdata/rust/rust/src/libcore/num/mod.rsb610d63e687c1bb61890b7290628f313numunchecked_add_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17he27be0fa2186d468Erhsbranch_weights\E6\C9\01\00\00\00\00\000\82PA#\08U4\82PI#\08\D54\82\B0\06`0\82PQ#\08O3\82\F08#\08U5\D4\14p\B9`\04\00\00\04\BA\00\00\00\00\00\01\00\8CU\04\B2\80\0F\FE\D3L%\1D\FD`\06g\80\0F\F8\E3\12\F8\03p\00\88\C0\82L\000\01\00SI\87M\E4\81\1E\CCD<\06:\11\8F\01\C0\01 \02\0B\BA\00\F4\04\00L%\1D\FD\E0\07\7F\80\0F\7F\01\16\7F\01p\00\88\C0\82.\00b\01\00SI\87Y\8C\02)\8C\85\EB\0B`\E1\FA\02\C0\01 \02\0B\BA\00\A0\05\00\CC0\9CB\80\0A3\0C\A8 \A4\C2\0C\03*\0C\AA0P\01\10\05\00\CC\00\0CT\00D\11\1C\83\0D\00\80\CCs\00d\90 \C0\01\0CT\00\0D\00\00\83\0D\00\E0\0C6\00\BF\F0\0C6\00\E0\00\CDs\00d0\81\02p\00\135@#\F9\02\80\0E\E2\00\0A\A0\00\00\000Q\034\94/\00\E8 \0E\A0\00\0A\A0\00\00\C0\0C\C28\90\C3d\03P\89\C3\0C\819\8C\14\09S\E4\0B@8\00 \01\0A\00P\0E\00p\0E\160]`L'\18\C6D\0D\F0p\00\00\F4\02(\80\02\00\00\C1D\0D\D0l\BE\00\BC\C3:\80\02(\00\00\00L\D4\00M\E7\0B\C0;\88\03(\80\02(\00\000\83\C0\0E\ED0R$L\9A/\00\00\00\12\A0\00\00\EE\00\00\BA\E0\01\135@\B3\F9\020\0F\EB\00\0A\A0\00\00\000Q\034\9D/\00\F3 \0E\A0\00\0A\A0\00\00\C0\0C\02<\C4\C3H\910}\BE\00\00\00H\80\02\00\C8\03\00\E8\02\18\003\0C\C0;\CC\C3L\84\00\D0\030\1Da\80 \01\80\C2t\84\01\82\04(\80\C2@\05 \06@0\06\135\C0C\06\00\00\A0\03(\80\02\00\00\C1p\89 \0Ba\80\0F\F8\93\0F\01\00\0C6\00\BF\C0\0C6\00\FB\00\0D6\00\FCP\06\83\0D\C0/\A0\C1d\03\B0\06\E20C\F0\0F#E\C2\A4\06\BE\00\B0\04\00\12\A0\00\00\BA\00\00 \C1\06\C0D\0D\D0\A8\81/\00*\11\12 \01\0A\00\D0\0A\C0D\0D\D0\B8\81/\00%!\0E\A0\00\0A\A0\00\00\C0\0C\C1H\8C\14\09S\1B\F8\02\C0\12\00H\80\02\00\90\04\00\80\C4\1B\00\135@\D3\06\BE\00\A8DI\80\04(\00\80+\003\08\22a\12\F3\1C\00\19\C4\01(\00\070Q\034\80/\00\FE\80\12\A0\00\0A\00(\00\C0H\910\07\80/\00\FE\00\80\04(\00\C0I\00\00H\C0AJ\CC\10\A8\C4H\910\A5\81/\00\FE\00\80\04(\00\C0J\00\00 \07\C0\0C\02K\E4\C3L\84\00\B4\040\5C\22\C4\C2\1C\E0\83\FF\88\03\00 3\08\FA\F0\12\93\0D\00\1D\88\C3\0CAL\0CT\00u\00\04v0\D8\00\FC\C2\1D\0C6\004\81\07\83\0D@M\94\C1<\07@\06{\80\00\020Q\03<|\00\00\808\80\02(\00\00\10\CC0\DC\04N\E0\C4L\84\00\E4\040\5C\22\CCB\18\CCD<\068\11\00\C0p\890\0B}0\13\F1\18\E0\84\00\003\08;\C1\13\C3%\02-H\F8\F0\17\E2\10\00\C0\0C\838\88\838\CCD\08\C0O\00\C3%\02-\CC\01>\FC\858\08\000\83\E0\13a1P\01\80\02\10\84\C2p\89P\0Ba0\16\AE/\88C\00\00\83\0D\C0/\88\C2`\03P\16e0\5C\22\D4B)\8C\85\EB\0B\E2 \00\C0\0C\02Y\9C\C5\0C\83)\A4\C2+\DC8\00\1C\C7qh\C0q\1C\E7\12\A0\E0\17\AA\E1\17\AA\E1\06n\E0\06n\00\B9\81\18\80\82\1B\88\01\1A\A0\81)\F0\83H\A0\01\1Ap:aq\F0\C0\0F\22\81\064\C1\0F\22\81\06:\E1\06n\A0\07\A0\A0\07\F6@\0Eh\80\06n\E0\06n\C0\99\05J\A0\04g\16(\81\06\AC \12l\C1\81\05\1A\B8\019\A0\81\1Bpz\E0\06n\E0\06\A6`\0Ft\E0\06\EA\A0\0Eh\E0\0Bt\E0\06\E4\80\06z\A0\0En\E0\06\EA\80\062\12\98\A0\8C\D8\D8\EC\DA\5C\DA\DE\C8\EA\D8\CA\5C\CC\D8\C2\CE\E6F\19j\C1\16n!\1766\BB6\172\B13\97\B1\BAQ\82W\00\00\A9\18\00\00\0B\00\00\00\0B\0Ar(\87w\80\07zXp\98C=\B8\C38\B0C9\D0\C3\82\E6\1C\C6\A1\0D\E8A\1E\C2\C1\1D\E6!\1D\E8!\1D\DE\C1\1D\00\D1\10\00\00\06\00\00\00\07\CC<\A4\83;\9C\03;\94\03=\A0\83<\94C8\90\C3\01\00\00\00a \00\00\8D\00\00\00\13\04A,\10\00\00\00\01\00\00\00$\8D\00\00\F10\00\00B\00\00\00\22G\C8\90Q\0E\04\1B\00\00\00\00J\13\01\00fixed_size&[u8; 320000]&mut [u8; 320000]\13\84\87\99U\04p\B1\0B\853\AB\08\E0b\17\8AdV\11\C4\C5.\14\CE\AC\22\90\8B](\8AU\D2\C1\0Bj\01\EC\02\91\17\04\80\01 \02\0B\BA\00\80\06\00\AC\19\84\B6\006\04s1)\12\02\00\00\80^\00A\D2\15\10\00\A0\0B\00\00\00`Q\03<k\01\00@]\80\02(\00\00\10,j\80\87-\00\00\A8\0BP\00\05\00\00\82\0D\03`\17w\B1\89\10\00\BC\00\C6%\82\5C(\BB@\D8E\00\00\E3\12A.\96] \EEB\00\80q\89\10\17\CC.\14\E8\00\00\C8\B8D\80\8Bk\17\0Aq\00\00d\5C\22\BC\05\B6\0B\858\00\002.\11\DC\22\DB\85B\1C\00\00\D9`\E8\C5^\F0E_\F8\C5_L\10\940\98 (b\00\00\00#\06\07\00\82`p\06\19\B9\FF\FF\FF\0F\EB\FE\FF\FF?\F0\FD\FF\FF\FF0cP\00\80\5C\00\C0\88\C1\01\80 \18\9CA6\EE\FF\FF\FF\83\BA\FF\FF\FF\0F|\FF\FF\FF?L\18\00#\06\07\00\82`p\06\99\EE\FF\FF\FF\0F\E9\FE\FF\FF?\EC\FD\FF\FF\FF0cP\00@\5C\00@O\06\E1\BAz2\10\186b\80  \08\06\93'\04\DA0cP\18\89[\00\C0\88\C1\01\80 \18\9C\C1\B6\FB\FF\FF\FF\83\BA\FF\FF\FF\0F~\FF\FF\FF?\CC\18\14\00\00\17\000bp\00 \08\06g\B0\ED\FE\FF\FF\FF\80\EE\FF\FF\FF\83\DF\FF\FF\FF\0F3\06\05\00\B8\05\00\8C\18\1C\00\08\82\C1\19l\BB\FF\FF\FF?\AC\FB\FF\FF\FF\D0\F7\FF\FF\FF\C3\8CA\01\00q\01\00:cP \82\5C\00@8\10\00\07\00\00\00&2\0C\D2t\00\854\01\D1d!\83\14\09VRH\91P\E7FR\0C\D2T\E3\00\011\00\00\02\00\00\00[\04 .\00\00\00\00\00\00\00\00a \00\00\F4\00\00\00\13\04E,\10\00\00\00\02\00\00\004\DA\1E\01\00\00\00\00\F10\00\003\00\00\00\22G\C8\90Q\06\04\04\0C\00\00\00unknown_size\B3\8A\A0-v\C1qf\15A[\EC\82\93\CC*\02\B7\D8\05\C7\99U\04o\B1\0BN\B1J:xA-\80]h\EA\A1\010\00D`A\17\00\BD\00\00\9D\07\12\C8\10\22CFB;\0El\01\E8\FCa\88\05\B8\D0\FE\E3\11\0Bp\A1C\C3b\16\E4\C2\B8Dx\0Be\17\9Aw\08\00`\5C\22\BC\C5\B2\0B\CD<\08\000.\11\DC\82\D9\05\07\1D\00\00\19\97\08mq\ED\82#\0E\00\80\8CK\04\B6\C0v\C1\11\07\00@\C6%\C2Zd\BB\E0\88\03\00 \1B\0C\BA\A8\0B\BB\B8\0B\BC\C8\8B\09\82\13\06\13\84G\0C&\08\CE\18L\10\1E2\98 <g\00\00#\06\07\00\82`p\06\1B\BB\FF\FF\FF\0F\F3\FE\FF\FF?\C4\FD\FF\FF\FF0cP\00\C0[\00\C0\88\C1\01\80 \18\9C\C1\B6\EE\FF\FF\FF\C3\BC\FF\FF\FF\0Fp\FF\FF\FF?L\18\00#\06\07\00\82`p\06\9B\BA\FF\FF\FF\0F\F2\FE\FF\FF?\C4\FD\FF\FF\FF0a\00\8C\18\1C\00\08\82\C1\19l\E9\FE\FF\FF?\C8\FB\FF\FF\FF\00\F7\FF\FF\FF\C3\84\010bp\00 \08\06g\B0\F1\FE\FF\FF\FF\10\EF\FF\FF\FFC\DF\FF\FF\FF\0F3\06\05\00\B8\05\00\8C\18\1C\00\08\82\C1\19l\BC\FF\FF\FF?\B4\FD\FF\FF\FF\E0\F7\FF\FF\FF\C3\8CA\01\00\B2\00\17\C0p\03\91\81\C1\8CA\11\8F\01\1D\CCB\5C\00\B3\0C\81\10\CC\18\14\F9\93\C8\02\5C\00:cPD\C2[\00\C0@\C5S\0Ct\00\8C\18\1C\00\08\82\C1\19t\EA\FE\FF\FF?\AC\FC\FF\FF\FF\00\FA\FF\FF\FF\C3\8CA\01\00\B4 \17\C0\88\C1\01\80 \18\9CA\B7\FB\FF\FF\FF\03\CA\FF\FF\FF\0F\A0\FF\FF\FF?L\18\00#\06\07\00\82`p\06\9D\BA\FF\FF\FF\0F%\FF\FF\FF?\80\FE\FF\FF\FF0cP\00@-\CC\050bp\00 \08\06g\D0\ED\FE\FF\FF\FF \F2\FF\FF\FF\03\E8\FF\FF\FF\0F\13\06\C0\88\C1\01\80 \18\9CA\A7\EE\FF\FF\FF\83\BC\FF\FF\FF\0F\A0\FF\FF\FF?\CC\18\14\00\D0\16\000bp\00 \08\06g\D0\A9\FB\FF\FF\FF\00\EF\FF\FF\FF\03\E8\FF\FF\FF\0F3\06\05\00\AC\05\00\0C7\04\04\18\CC\18\14O\B2\16\000\CB@\0C\C1\84\01\80\C2\06\013\06E\EC\0BZ-\CC\05\D0\9B!\E9\86\19\83\E2\91\D6\02\00(\00\C2\84\01\D0\9B!\F9\8A\19\83\E2I\D6\02\00\86\0D\88@\08\80\09\03`\C4\E0\00@\10\0C\CE@\0C\C6\FF\FF\FF\7F\C0\F7\FF\FF\FF\81\F4\FF\FF\FF\87\19\83\02\00\DC\02\00F\0C\0E\00\04\C1\E0\0C\C4`\FC\FF\FF\FF\07\BA\FF\FF\FF\1FJ\FF\FF\FF\7F\981(\00@\16\E0\02\18n \160\981(\E21\A0\83Y\88\0B`\96!\10\82\19\83\22\7F\12Y\80\0B`\C4\E0\00@\10\0C\CE`\0C\E2\FD\FF\FF\7F\88\F9\FF\FF\FF\C1\F4\FF\FF\FF\87\19\83\02\00hA.\80\11\83#\09A0 \032P\94d\C6\A0x\92\B5\00\00\9E0\00\C2\81\00\00\00\00\16\00\00\00\D6\A2\10\172\09N3\D4\BA\8D\14\834\F9\B4\91\14\834\F9\B5\9D<\C8DD\BE\149\80O\FBt\8D\1F\81\F1\00\0D\22\D4\B62\FC\B5~\00\854\01\D1t\01C\10\E4'0\04\01\7F\03C\10\F4\16RH\91\E0\D3&RH\91\E0\D7\86\82\10\172\09N3\00\00\011\00\00\03\00\00\00[\04\C0-\B6\0C\91\80\16\00\00\00\00\00\00\00a \00\00\A9\00\00\00\13\04C,\10\00\00\00\01\00\00\00$\8D\00\00\F10\00\00.\00\00\00\22G\C8\90Q\06\04\03\08\00\00\00perf_mot\B3\8A\A0-v\E1rf\15A[\EC\C2\95\CC*\02\B7\D8\85\CB\99U\04o\B1\0BW\B1J:xA-\80]\B0\EA\C1\020\00D`A\17\00\BC\00\00\9D\07\12\C8\10\22CFB_\0El\01\E8\FCa\88\05\B80.\11\DEB\D9\05\EB\1D\02\00\18\97\08o\B1\EC\825\0F\02\00\8CK\04\B7`v\E1B\07\00@\C6%B[\5C\BBp\89\03\00 \E3\12\81-\B0]\B8\C4\01\00\90q\89\B0\16\D9.\5C\E2\00\00\C8\06C.\E6\82.\EA\C2.\EEb\82\E0\84\C1\04\E1\11\83\09\823\06\13\84\87\0C\00\00#\06\07\00\82`p\06\9B\BB\FF\FF\FF\0F\F5\FE\FF\FF?\C4\FD\FF\FF\FF0cP\00\C0[\00\C0\88\C1\01\80 \18\9C\C1\D6\EE\FF\FF\FFC\BD\FF\FF\FF\0Fp\FF\FF\FF?L\18\00#\06\07\00\82`p\06\1B\BB\FF\FF\FF\0F\F4\FE\FF\FF?\C4\FD\FF\FF\FF0a\00\8C\18\1C\00\08\82\C1\19l\EB\FE\FF\FF?\D0\FB\FF\FF\FF\00\F7\FF\FF\FF\C3\84\010bp\00 \08\06g\B0\F1\FE\FF\FF\FF0\EF\FF\FF\FFC\DF\FF\FF\FF\0F3\06\05\00\B8\05\00\8C\18\1C\00\08\82\C1\19l\BC\FF\FF\FF?\B4\FD\FF\FF\FF\E0\F7\FF\FF\FF\C3\8CA\01\00\B2\00\17\C0p\03\91\81\C1\8CA\11\8F\01\1D\CCB\5C\00\B3\0CB\10\CC\18\14\F9\93\C8\02\5C\00\BD\19\0CM\EB\CDPl\DB\88\01\82\80 \18La\10\08\071cPd\CDZ\00\C0\88\C1\01\80 \18\9C\81\E7\FB\FF\FF\FFC\BD\FF\FF\FF\0F\A1\FF\FF\FF?\CC\18\14\00\D0\16\000bp\00 \08\06g\E0\F9\FE\FF\FF\FF0\EF\FF\FF\FFC\E8\FF\FF\FF\0F3\06\05\00\AC\05\00\8C\18\1C\00\08\82\C1\19x\BE\FF\FF\FF?\D8\FB\FF\FF\FF\00\FA\FF\FF\FF\C3\8CA\01\00n\01\00#\06\07\00\82`p\06\9E\EF\FF\FF\FF\0Fp\FF\FF\FF?\84\FE\FF\FF\FF0cP\00\80,\C0\050K \CC\18\14\9C\F0\16\00\A0\13\06@8\10\00\00\00\10\00\00\006R\0C\D2\E4\D3FR\0C\D2\E4\D7\86r\0C\D2\E4\D3\F5}\01M\10\EC\FE\13\11\07\01\0CDd!\85\14\09>m\22\85\14\09~m'\87\14\09>]\E3\07PH\13\10M'0\04A\0E\00\00\011\00\00\02\00\00\00[\04\C0-\00\00\00\00\00\00\00\00a \00\00\AD\01\00\00\13\04J,\10\00\00\00\02\00\00\004\DA\1E\02\B6\C7\00\00\F10\00\00S\00\00\00\22G\C8\90Q\06\84\04\0E\00\00\00transformation\00\00\B3\8A\A0-v\E1\0C\A4YE\D0\16\BBp\06\CD\AC\22p\8B]8\03iV\11\CC\C5.\9CA2\AB\08\E2b\17\C6@\9AU\04q\B1\0Bc\D0\CC*\02\B9\D8\851\90f\15\C1\5C\EC\C2\18$\AB\A4\83\17\D4\02\D8\850\A8\870\000\00D`A\17\00\D3\00\00\9D\07\12\C8\10\22CFB\9F\81\04[\00z\0C$\E0\02\D0\FE\E3\11\0Bu\A1C\C3b\16\ECB\E7\0FC,\D4\85\F6\1F\8FX\A0\0B\1D\1A\16\B3\90\17:\7F\18b\81.\8CK\84\B9Pv!\0C\DE!\00\80q\890\17\CB.\84\C1<\08\000.\11\E4\82\D9\851@\07\00@\C6%B\5C\5C\BB0\06\E2\00\00\C8\B8D\80\0Bl\17\C6@\1C\00\00\19\97\08o\91\ED\C2\18\88\03\00 \E3\12\C1-\98]8\03t\00\00d\5C\22\B4\C5\B5\0Bg \0E\00\80\8CK\04\B6\C0v\E1\0C\C4\01\00\90q\89\B0\16\D9.\9C\818\00\00\B2A\E1\8B\BE\F0\8B\BF\00\8D\D0\10\8D\D1 \8D\D2\98 8a0Ax\C4`\82\E0\8C\C1\04\E1!\83\09\C2\93\06\13\84\07\0E\00\00\00\00#\06\07\00\82`p\06\5C\B8\FF\FF\FF\0F\EC\FE\FF\FF?\C8\FD\FF\FF\FF0cP\00\C0\5C\00\C0\88\C1\01\80 \18\9C\01\07\EE\FF\FF\FF\03\BB\FF\FF\FF\0Fq\FF\FF\FF?L\18\00#\06\07\00\82`p\06\DC\AF\FF\FF\FF\0F\EB\FE\FF\FF?\C8\FD\FF\FF\FF0a\00\8C\18\1C\00\08\82\C1\19p\BE\FE\FF\FF?\AC\FB\FF\FF\FF\10\F7\FF\FF\FF\C3\84\010\DCP\0C`0cP\88\012\17\000\DC`la0cP\00\C0\5C\00\C0,\83\10\083\06\85\18\14s\01\00#\06\07\00\82`p\06\DE\EF\FF\FF\FF\0F\E8\FE\FF\FF?\80\FE\FF\FF\FF0cP\00\80[\00\C0\88\C1\01\80 \18\9C\81\F7\FB\FF\FF\FF\03\DC\FF\FF\FF\0F\A1\FF\FF\FF?\CC\18\14\00 \0Bt\01\CC2\14G0cP\E4O\22\0Bt\01\8C\18\1C\00\08\82\C1\19x\BF\FF\FF\FF?\B0\FB\FF\FF\FF\00\FA\FF\FF\FF\C3\8CA\01\00r\01\00#\06\07\00\82`p\06\DE\EF\FF\FF\FF\0Fp\FF\FF\FF?\84\FE\FF\FF\FF0cP\00\80,\D4\050\CB0\1C\C1\8CA\91?\89,\D4\050P\F1\14\04\1E\08#\06\07\00\82`p\06\1F\B8\FF\FF\FF\0F-\FF\FF\FF?\88\FE\FF\FF\FF0cP\00\00-\D8\050bp\00 \08\06g\F0\F5\FE\FF\FF\FF\A0\F2\FF\FF\FF\83\E8\FF\FF\FF\0F\13\06\C0\88\C1\01\80 \18\9C\C1\07\EE\FF\FF\FF\C3\C9\FF\FF\FF\0F\A2\FF\FF\FF?\CC\18\14\00P\0Bw\01\8C\18\1C\00\08\82\C1\19|\BD\FF\FF\FF?\90\FC\FF\FF\FF \FA\FF\FF\FF\C3\84\010bp\00 \08\06g\F0\81\FB\FF\FF\FF\C0\EE\FF\FF\FF\83\E8\FF\FF\FF\0F3\06\05\00\C4\05\00\8C\18\1C\00\08\82\C1\19|\E0\FE\FF\FF?\A8\FB\FF\FF\FF \FA\FF\FF\FF\C3\8CA\01\00o\01\00\C3\0D\01\02\063\06\05\194o\01\00\B3\0C\08\11L\18\00(t\100cP\C4\BE\A0\D5\C2]\00\BD\19\96o\981(\C8\C0z\0B\00\A0\00\08\13\06@o\86%\0C\8A\19\83\82\0C\9A\B7\00\80a\03\22\10\02`\C2\00\1818\00\10\04\833 \83\F2\FF\FF\FF\1F\E4\FD\FF\FF\7F0\FD\FF\FF\FFa\C6\A0\00\00\B9\00\80\11\83\03\00A08\032(\FF\FF\FF\FF\C1\EE\FF\FF\FF\87\D3\FF\FF\FF\1Ff\0C\0A\00\90\85\BA\00\86\1B\88\06\0Cf\0C\8Ax\0C\E8`\16\F0\02\98e8\86`\C6\A0\C8\9FD\16\EA\02\18\A8x\0A\C3\14\82\11\83\03\00A08\0330\F7\FF\FF\FF\81\E6\FF\FF\FF\87\D4\FF\FF\FF\1Ff\0C\0A\00\A0\85\BC\00F\0C\0E\00\04\C1\E0\0C\CC\80\FC\FF\FF\FF\87\98\FF\FF\FF\1FR\FF\FF\FF\7F\980\00F\0C\0E\00\04\C1\E0\0C\CC\C0\DC\FF\FF\FF\07\97\FF\FF\FF\1FR\FF\FF\FF\7F\981(\00\A0\16\F4\02\1818\00\10\04\8330\03\F2\FF\FF\FF\1FV\FE\FF\FF\7FH\FD\FF\FF\FFa\C2\00\1818\00\10\04\8330\03s\FF\FF\FF\1F\DE\FD\FF\FF\7FH\FD\FF\FF\FFa\C6\A0\00\80\B6\00\80\11\83\03\00A08\0330\F7\FF\FF\FF\A1\DD\FF\FF\FF\87\D4\FF\FF\FF\1Ff\0C\0A\00X\0B\00\18n\08\1A0\981(\D0\A0Y\0B\00\98eH\8C`\C2\00@\81\0C `\C6\A0\88}A\AB\05\BD\00z3Hf0\CC\18\14h`\AD\05\00P\00\84\09\03\A07\83\84\06\C5\8CA\81\06\CDZ\00\C0\B0\01\11\08\010a\00\8C\18\1C\00\08\82\C1\19\AC\01\FB\FF\FF\FF\0F\F5\FE\FF\FF?\B4\FE\FF\FF\FF0cP\00\80[\00\C0\88\C1\01\80 \18\9C\C1\1A\B0\FF\FF\FF\FF\D0\F7\FF\FF\FF\83\EB\FF\FF\FF\0F3\06\05\00\C8\02]\00\C3\0D\04\05\063\06E<\06t0\0B{\01\CC2\1CE0cP\E4O\22\0Bt\01\E8\8CA\B1\06\C2\5C\00\C0\88\C1\01\80 \18\9C\01\1B\C0\FB\FF\FF\FF\A0\F3\FF\FF\FF\C3\EB\FF\FF\FF\0F3\06\05\00\D0\82]\00#\06G\12\82`@\06mPU\D2\8CAA\06\CD[\00\00O\18\00#\06\07\00\82`p\06l\E0\EE\FF\FF\FF\83\CE\FF\FF\FF\0F\AF\FF\FF\FF?\CC\18\14\00@\0By\01\8C\18\1CI\08\82\01\19\B4\C14E3\06\05\1A4k\01\00<a\00\84\03\01\00,\00\00\00\F6\A2\10\172\09N3\E4\B4\D1\0C?^\9B\8DB\5C\C8$8\CD\90\DB7@\04Am\1F\01\11\04\F5m#\C5 M>m1\0Aq!\93\E04C^\1B\0C\84LDT\FBR\E4\00>\ED\D3\B8n$\C5 M~}\02M\10\EC\FE\13\11\07\01\0CDt\08\C6\034\88`_\82\F1\00\0D\22\F0W@\04\81]\9F\01\11\04\B6}\07D\10\D8\F7\01\14\D2\04D\93\B5\0C\BF][H!E\82O\9BH!E\82__\80\13\04\B5\EE?\11q\10\C0@Dv\22\FC\B7\A5<\C8DD\BE\149\80O\FB4\9E\9B\0AB\5C\C8$8\CD\00\00\00\00\011\00\00\04\00\00\00[\04@.\B6\0C\95\80\16[\863\10\D0\02\00\00\00\00\00\A1 \00\00\1C\00\00\00\A3\04\C7P\01 \AA\00!2\84\88\10!B\C4\08\89\1A@\88\0C!\22D\88\101BR\0E\10\22c\84\C4\BC D\86\88\11\12\F2\80\10\19BRZ\10\22d\84\8A\00 \80\00\08\12\AA\00x\00\01\18\12\02\14\CA\008\80\00\08\12\EA\00\F0\80\01 \12\04\06\14\0C\00\15\82\01\0B@\05a\00\C0\04PA\18\00\B0\01T\10\06\00\00\00\00q \00\00\05\00\00\002\0E\10\22\84\04\F4\08X0\A8\80\06\F9\0Bx@\DA\00\00\8B\8A\BDTI\BF\0C\E2\1B\C4\D9zPw\13\B4-\F4\CFO\91\0E\EE\1D\9CmW\00e\0C\00\00a\00\00\00\12\03\94\F8\02\00\00\00\02\00\00\00\BC\00\00\00.\00\00\00L\00\00\00\01\00\00\00X\00\00\00\00\00\00\00X\00\00\00\0C\00\00\00x\01\00\00\00\00\00\00\EA\00\00\00\18\00\00\00\02\01\00\00\17\00\00\00\07\00\00\00\00\00\00\00x\01\00\00\00\00\00\00\00\00\00\00\0C\00\00\00\00\00\00\00\1C\00\00\00\0A\00\00\00\1C\00\00\00\0A\00\00\00\FF\FF\FF\FF\004\00\00&\00\00\00\0C\00\00\00&\00\00\00\0C\00\00\00\FF\FF\FF\FF\004\00\002\00\00\00\08\00\00\002\00\00\00\08\00\00\00\FF\FF\FF\FF\004\00\00:\00\00\00\0E\00\00\00:\00\00\00\0E\00\00\00\FF\FF\FF\FF\004\00\00H\00\00\00\19\00\00\00H\00\00\00\19\00\00\00\FF\FF\FF\FF\08,\00\00a\00\00\00\13\00\00\00a\00\00\00\13\00\00\00\FF\FF\FF\FF\084\00\00t\00\00\00:\00\00\00t\00\00\00:\00\00\00\FF\FF\FF\FF\084\00\00\AE\00\00\00\0E\00\00\00\AE\00\00\00\0E\00\00\00\FF\FF\FF\FF\08,\00\00\19\01\00\00\09\00\00\00\00\00\00\00\07\00\00\00\FF\FF\FF\FF\00\18\00\00\22\01\00\00\09\00\00\00\07\00\00\00\07\00\00\00\FF\FF\FF\FF\00\18\00\00+\01\00\00\09\00\00\00\0E\00\00\00\07\00\00\00\FF\FF\FF\FF\00\18\00\004\01\00\00\09\00\00\00\15\00\00\00\07\00\00\00\FF\FF\FF\FF\00\18\00\00\00\00\00\00]\0C\00\00S\00\00\00\12\03\94}\02\00\00\00alloc36alloc29alloc33alloc37fixed_sizeunknown_sizeperf_mottransformationllvm.memcpy.p0i8.p0i8.i64rust_eh_personality_ZN4core9panicking18panic_bounds_check17h566454b12ba8f623Ellvm.dbg.value9.0.1 3a0b17654ab1f63b7ef1b49c8c3d4d01214c93a4x86_64-unknown-linux-gnuforpaper.5r7vwc02-cgu.0.Lalloc36.Lalloc29.Lalloc33.Lalloc37\00\00\00\00\00\00\00", section ".llvmbc"
@rustc.embedded.cmdline = private global [0 x i8] zeroinitializer, section ".llvmcmd"

; Function Attrs: nonlazybind uwtable
define void @fixed_size([320000 x i8]* noalias nocapture readonly align 1 dereferenceable(320000) %src, [320000 x i8]* nocapture align 1 dereferenceable(320000) %dst) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !6 {
start:
  call void @llvm.dbg.value(metadata [320000 x i8]* %src, metadata !18, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata [320000 x i8]* %dst, metadata !19, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !20, metadata !DIExpression(DW_OP_deref)), !dbg !40
  %dst14 = getelementptr inbounds [320000 x i8], [320000 x i8]* %dst, i64 0, i64 0
  %src15 = getelementptr inbounds [320000 x i8], [320000 x i8]* %src, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %dst14, i8* nonnull align 1 %src15, i64 320000, i1 false), !dbg !41
  call void @llvm.dbg.value(metadata i32 undef, metadata !33, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata i32 undef, metadata !37, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata i32 undef, metadata !20, metadata !DIExpression(DW_OP_deref)), !dbg !40
  ret void, !dbg !44
}

; Function Attrs: nonlazybind uwtable
define void @unknown_size([0 x i8]* noalias nocapture nonnull readonly align 1 %src.0, i64 %src.1, [0 x i8]* nocapture nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !45 {
start:
  call void @llvm.dbg.value(metadata [0 x i8]* %src.0, metadata !58, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !68
  call void @llvm.dbg.value(metadata i64 %src.1, metadata !58, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !68
  call void @llvm.dbg.value(metadata [0 x i8]* %dst.0, metadata !59, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !68
  call void @llvm.dbg.value(metadata i64 %dst.1, metadata !59, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !68
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !60, metadata !DIExpression(DW_OP_deref)), !dbg !69
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !70, metadata !DIExpression()), !dbg !99
  %0 = icmp eq i64 %src.1, 0, !dbg !101
  br i1 %0, label %bb5, label %bb8, !dbg !115

bb5:                                              ; preds = %bb9, %start
  ret void, !dbg !116

bb8:                                              ; preds = %start, %bb9
  %iter.sroa.0.014 = phi i64 [ %1, %bb9 ], [ 0, %start ]
  call void @llvm.dbg.value(metadata i64 %iter.sroa.0.014, metadata !117, metadata !DIExpression()), !dbg !123
  call void @llvm.dbg.value(metadata i64 1, metadata !122, metadata !DIExpression()), !dbg !123
  call void @llvm.dbg.value(metadata i64 %iter.sroa.0.014, metadata !125, metadata !DIExpression()), !dbg !132
  call void @llvm.dbg.value(metadata i64 1, metadata !131, metadata !DIExpression()), !dbg !132
  call void @llvm.dbg.value(metadata i64 %iter.sroa.0.014, metadata !62, metadata !DIExpression()), !dbg !134
  call void @llvm.dbg.value(metadata i64 %iter.sroa.0.014, metadata !66, metadata !DIExpression()), !dbg !135
  %exitcond = icmp eq i64 %iter.sroa.0.014, %dst.1, !dbg !136
  br i1 %exitcond, label %panic1, label %bb9, !dbg !136, !prof !137

bb9:                                              ; preds = %bb8
  %1 = add nuw i64 %iter.sroa.0.014, 1, !dbg !138
  %2 = getelementptr inbounds [0 x i8], [0 x i8]* %src.0, i64 0, i64 %iter.sroa.0.014, !dbg !139
  %_16 = load i8, i8* %2, align 1, !dbg !139
  %3 = getelementptr inbounds [0 x i8], [0 x i8]* %dst.0, i64 0, i64 %iter.sroa.0.014, !dbg !136
  store i8 %_16, i8* %3, align 1, !dbg !136
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !60, metadata !DIExpression(DW_OP_deref)), !dbg !69
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !70, metadata !DIExpression()), !dbg !99
  %exitcond16 = icmp eq i64 %1, %src.1, !dbg !101
  br i1 %exitcond16, label %bb5, label %bb8, !dbg !115

panic1:                                           ; preds = %bb8
  call void @llvm.dbg.value(metadata i64 %dst.1, metadata !117, metadata !DIExpression()), !dbg !123
; call core::panicking::panic_bounds_check
  tail call void @_ZN4core9panicking18panic_bounds_check17h566454b12ba8f623E(i64 %dst.1, i64 %dst.1, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc29 to %"core::panic::Location"*)), !dbg !136
  unreachable, !dbg !136
}

; Function Attrs: nounwind nonlazybind uwtable
define void @perf_mot([0 x i8]* noalias nocapture nonnull readonly align 1 %src.0, i64 %src.1, [0 x i8]* nocapture nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !140 {
start:
  call void @llvm.dbg.value(metadata [0 x i8]* %src.0, metadata !142, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !152
  call void @llvm.dbg.value(metadata i64 %src.1, metadata !142, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !152
  call void @llvm.dbg.value(metadata [0 x i8]* %dst.0, metadata !143, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !152
  call void @llvm.dbg.value(metadata i64 %dst.1, metadata !143, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !152
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !144, metadata !DIExpression(DW_OP_deref)), !dbg !153
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !70, metadata !DIExpression()), !dbg !154
  %0 = icmp eq i64 %src.1, 0, !dbg !156
  br i1 %0, label %bb5, label %bb7.preheader, !dbg !158

bb7.preheader:                                    ; preds = %start
  %src.014 = getelementptr inbounds [0 x i8], [0 x i8]* %src.0, i64 0, i64 0
  %dst.013 = getelementptr inbounds [0 x i8], [0 x i8]* %dst.0, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %dst.013, i8* nonnull align 1 %src.014, i64 %src.1, i1 false), !dbg !159
  call void @llvm.dbg.value(metadata i32 undef, metadata !146, metadata !DIExpression()), !dbg !160
  call void @llvm.dbg.value(metadata i32 undef, metadata !150, metadata !DIExpression()), !dbg !161
  call void @llvm.dbg.value(metadata i32 undef, metadata !144, metadata !DIExpression(DW_OP_deref)), !dbg !153
  call void @llvm.dbg.value(metadata i32 undef, metadata !70, metadata !DIExpression()), !dbg !154
  br label %bb5, !dbg !162

bb5:                                              ; preds = %bb7.preheader, %start
  ret void, !dbg !162
}

; Function Attrs: nonlazybind uwtable
define void @transformation([0 x i8]* noalias nocapture nonnull readonly align 1 %src.0, i64 %src.1, [0 x i8]* nocapture nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !163 {
start:
  call void @llvm.dbg.value(metadata [0 x i8]* %src.0, metadata !165, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !183
  call void @llvm.dbg.value(metadata i64 %src.1, metadata !165, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !183
  call void @llvm.dbg.value(metadata [0 x i8]* %dst.0, metadata !166, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !183
  call void @llvm.dbg.value(metadata i64 %dst.1, metadata !166, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !183
  %_3 = icmp eq i64 %src.1, %dst.1, !dbg !184
  %0 = icmp ne i64 %src.1, 0, !dbg !183
  br i1 %_3, label %bb7.preheader, label %bb16.preheader, !dbg !185

bb16.preheader:                                   ; preds = %start
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !175, metadata !DIExpression(DW_OP_deref)), !dbg !186
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !70, metadata !DIExpression()), !dbg !187
  br i1 %0, label %bb21, label %bb23, !dbg !189

bb7.preheader:                                    ; preds = %start
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !167, metadata !DIExpression(DW_OP_deref)), !dbg !190
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !70, metadata !DIExpression()), !dbg !191
  br i1 %0, label %bb12, label %bb23, !dbg !193

bb12:                                             ; preds = %bb7.preheader, %bb13
  %iter.sroa.0.045 = phi i64 [ %1, %bb13 ], [ 0, %bb7.preheader ]
  call void @llvm.dbg.value(metadata i64 %iter.sroa.0.045, metadata !117, metadata !DIExpression()), !dbg !194
  call void @llvm.dbg.value(metadata i64 1, metadata !122, metadata !DIExpression()), !dbg !194
  call void @llvm.dbg.value(metadata i64 %iter.sroa.0.045, metadata !125, metadata !DIExpression()), !dbg !196
  call void @llvm.dbg.value(metadata i64 1, metadata !131, metadata !DIExpression()), !dbg !196
  call void @llvm.dbg.value(metadata i64 %iter.sroa.0.045, metadata !169, metadata !DIExpression()), !dbg !198
  call void @llvm.dbg.value(metadata i64 %iter.sroa.0.045, metadata !173, metadata !DIExpression()), !dbg !199
  %exitcond = icmp eq i64 %iter.sroa.0.045, %src.1, !dbg !200
  br i1 %exitcond, label %panic2, label %bb13, !dbg !200, !prof !137

bb13:                                             ; preds = %bb12
  %1 = add nuw i64 %iter.sroa.0.045, 1, !dbg !201
  %2 = getelementptr inbounds [0 x i8], [0 x i8]* %src.0, i64 0, i64 %iter.sroa.0.045, !dbg !202
  %_21 = load i8, i8* %2, align 1, !dbg !202
  %3 = getelementptr inbounds [0 x i8], [0 x i8]* %dst.0, i64 0, i64 %iter.sroa.0.045, !dbg !200
  store i8 %_21, i8* %3, align 1, !dbg !200
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !167, metadata !DIExpression(DW_OP_deref)), !dbg !190
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !70, metadata !DIExpression()), !dbg !191
  %exitcond50 = icmp eq i64 %1, %src.1, !dbg !203
  br i1 %exitcond50, label %bb23, label %bb12, !dbg !193

bb21:                                             ; preds = %bb16.preheader, %bb22
  %iter1.sroa.0.046 = phi i64 [ %4, %bb22 ], [ 0, %bb16.preheader ]
  call void @llvm.dbg.value(metadata i64 %iter1.sroa.0.046, metadata !117, metadata !DIExpression()), !dbg !205
  call void @llvm.dbg.value(metadata i64 1, metadata !122, metadata !DIExpression()), !dbg !205
  call void @llvm.dbg.value(metadata i64 %iter1.sroa.0.046, metadata !125, metadata !DIExpression()), !dbg !207
  call void @llvm.dbg.value(metadata i64 1, metadata !131, metadata !DIExpression()), !dbg !207
  call void @llvm.dbg.value(metadata i64 %iter1.sroa.0.046, metadata !177, metadata !DIExpression()), !dbg !209
  call void @llvm.dbg.value(metadata i64 %iter1.sroa.0.046, metadata !181, metadata !DIExpression()), !dbg !210
  %exitcond51 = icmp eq i64 %iter1.sroa.0.046, %dst.1, !dbg !211
  br i1 %exitcond51, label %panic8, label %bb22, !dbg !211, !prof !137

bb22:                                             ; preds = %bb21
  %4 = add nuw i64 %iter1.sroa.0.046, 1, !dbg !212
  %5 = getelementptr inbounds [0 x i8], [0 x i8]* %src.0, i64 0, i64 %iter1.sroa.0.046, !dbg !213
  %_41 = load i8, i8* %5, align 1, !dbg !213
  %6 = getelementptr inbounds [0 x i8], [0 x i8]* %dst.0, i64 0, i64 %iter1.sroa.0.046, !dbg !211
  store i8 %_41, i8* %6, align 1, !dbg !211
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !175, metadata !DIExpression(DW_OP_deref)), !dbg !186
  call void @llvm.dbg.value(metadata { i64, i64 }* undef, metadata !70, metadata !DIExpression()), !dbg !187
  %exitcond52 = icmp eq i64 %4, %src.1, !dbg !214
  br i1 %exitcond52, label %bb23, label %bb21, !dbg !189

bb23:                                             ; preds = %bb22, %bb13, %bb16.preheader, %bb7.preheader
  ret void, !dbg !216

panic2:                                           ; preds = %bb12
  call void @llvm.dbg.value(metadata i64 %src.1, metadata !117, metadata !DIExpression()), !dbg !194
; call core::panicking::panic_bounds_check
  tail call void @_ZN4core9panicking18panic_bounds_check17h566454b12ba8f623E(i64 %src.1, i64 %src.1, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc33 to %"core::panic::Location"*)), !dbg !200
  unreachable, !dbg !200

panic8:                                           ; preds = %bb21
  call void @llvm.dbg.value(metadata i64 %dst.1, metadata !117, metadata !DIExpression()), !dbg !205
; call core::panicking::panic_bounds_check
  tail call void @_ZN4core9panicking18panic_bounds_check17h566454b12ba8f623E(i64 %dst.1, i64 %dst.1, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc37 to %"core::panic::Location"*)), !dbg !211
  unreachable, !dbg !211
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h566454b12ba8f623E(i64, i64, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #4

attributes #0 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { nounwind readnone speculatable }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !4, producer: "clang LLVM (rustc version 1.46.0-dev)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !5)
!4 = !DIFile(filename: "src/lib.rs", directory: "/benchdata/rust/assume_true/forpaper")
!5 = !{}
!6 = distinct !DISubprogram(name: "fixed_size", scope: !8, file: !7, line: 4, type: !9, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3, templateParams: !5, retainedNodes: !17)
!7 = !DIFile(filename: "src/lib.rs", directory: "/benchdata/rust/assume_true/forpaper", checksumkind: CSK_MD5, checksum: "7ef5767a139611e772e5867ff07caf3f")
!8 = !DINamespace(name: "forpaper", scope: null)
!9 = !DISubroutineType(types: !10)
!10 = !{null, !11, !16}
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 320000]", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!12 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 2560000, align: 8, elements: !14)
!13 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!14 = !{!15}
!15 = !DISubrange(count: 320000)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u8; 320000]", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!17 = !{!18, !19, !20, !33, !35, !37}
!18 = !DILocalVariable(name: "src", arg: 1, scope: !6, file: !7, line: 4, type: !11)
!19 = !DILocalVariable(name: "dst", arg: 2, scope: !6, file: !7, line: 4, type: !16)
!20 = !DILocalVariable(name: "iter", scope: !21, file: !7, line: 5, type: !22, align: 8)
!21 = distinct !DILexicalBlock(scope: !6, file: !7, line: 5, column: 5)
!22 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !24, file: !23, size: 128, align: 64, elements: !27, templateParams: !31, identifier: "4be1f8843c4abc6e6b0755e50f9e3873")
!23 = !DIFile(filename: "<unknown>", directory: "")
!24 = !DINamespace(name: "range", scope: !25)
!25 = !DINamespace(name: "ops", scope: !26)
!26 = !DINamespace(name: "core", scope: null)
!27 = !{!28, !30}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !22, file: !23, baseType: !29, size: 64, align: 64)
!29 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !22, file: !23, baseType: !29, size: 64, align: 64, offset: 64)
!31 = !{!32}
!32 = !DITemplateTypeParameter(name: "Idx", type: !29)
!33 = !DILocalVariable(name: "__next", scope: !34, file: !7, line: 5, type: !29, align: 8)
!34 = distinct !DILexicalBlock(scope: !21, file: !7, line: 5, column: 14)
!35 = !DILocalVariable(name: "val", scope: !36, file: !7, line: 5, type: !29, align: 8)
!36 = distinct !DILexicalBlock(scope: !34, file: !7, line: 5, column: 9)
!37 = !DILocalVariable(name: "i", scope: !38, file: !7, line: 5, type: !29, align: 8)
!38 = distinct !DILexicalBlock(scope: !34, file: !7, line: 5, column: 14)
!39 = !DILocation(line: 0, scope: !6)
!40 = !DILocation(line: 0, scope: !21)
!41 = !DILocation(line: 6, column: 9, scope: !38)
!42 = !DILocation(line: 0, scope: !34)
!43 = !DILocation(line: 0, scope: !38)
!44 = !DILocation(line: 8, column: 2, scope: !6)
!45 = distinct !DISubprogram(name: "unknown_size", scope: !8, file: !7, line: 13, type: !46, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3, templateParams: !5, retainedNodes: !57)
!46 = !DISubroutineType(types: !47)
!47 = !{null, !48, !53}
!48 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !23, size: 128, align: 64, elements: !49, templateParams: !5, identifier: "585202bcfc7dfd1dd72e8befe2491ee4")
!49 = !{!50, !52}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !48, file: !23, baseType: !51, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !48, file: !23, baseType: !29, size: 64, align: 64, offset: 64)
!53 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !23, size: 128, align: 64, elements: !54, templateParams: !5, identifier: "7596319ecf86f60af9b48d8c05ebf9f7")
!54 = !{!55, !56}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !53, file: !23, baseType: !51, size: 64, align: 64)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !53, file: !23, baseType: !29, size: 64, align: 64, offset: 64)
!57 = !{!58, !59, !60, !62, !64, !66}
!58 = !DILocalVariable(name: "src", arg: 1, scope: !45, file: !7, line: 13, type: !48)
!59 = !DILocalVariable(name: "dst", arg: 2, scope: !45, file: !7, line: 13, type: !53)
!60 = !DILocalVariable(name: "iter", scope: !61, file: !7, line: 14, type: !22, align: 8)
!61 = distinct !DILexicalBlock(scope: !45, file: !7, line: 14, column: 5)
!62 = !DILocalVariable(name: "__next", scope: !63, file: !7, line: 14, type: !29, align: 8)
!63 = distinct !DILexicalBlock(scope: !61, file: !7, line: 14, column: 14)
!64 = !DILocalVariable(name: "val", scope: !65, file: !7, line: 14, type: !29, align: 8)
!65 = distinct !DILexicalBlock(scope: !63, file: !7, line: 14, column: 9)
!66 = !DILocalVariable(name: "i", scope: !67, file: !7, line: 14, type: !29, align: 8)
!67 = distinct !DILexicalBlock(scope: !63, file: !7, line: 14, column: 14)
!68 = !DILocation(line: 0, scope: !45)
!69 = !DILocation(line: 0, scope: !61)
!70 = !DILocalVariable(name: "self", arg: 1, scope: !71, file: !72, line: 504, type: !93)
!71 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h40129f595cf302abE", scope: !73, file: !72, line: 504, type: !76, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, templateParams: !97, retainedNodes: !94)
!72 = !DIFile(filename: "/benchdata/rust/rust/src/libcore/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "cccabf57d1b2ffaf9873830757e526c9")
!73 = !DINamespace(name: "{{impl}}", scope: !74)
!74 = !DINamespace(name: "range", scope: !75)
!75 = !DINamespace(name: "iter", scope: !26)
!76 = !DISubroutineType(types: !77)
!77 = !{!78, !93}
!78 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !79, file: !23, size: 128, align: 64, elements: !80, identifier: "edae92f6aa2d4d3d8225245fd9f15299")
!79 = !DINamespace(name: "option", scope: !26)
!80 = !{!81}
!81 = !DICompositeType(tag: DW_TAG_variant_part, scope: !79, file: !23, size: 128, align: 64, elements: !82, templateParams: !85, identifier: "edae92f6aa2d4d3d8225245fd9f15299_variant_part", discriminator: !91)
!82 = !{!83, !87}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !81, file: !23, baseType: !84, size: 128, align: 64, extraData: i64 0)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !78, file: !23, size: 128, align: 64, elements: !5, templateParams: !85, identifier: "edae92f6aa2d4d3d8225245fd9f15299::None")
!85 = !{!86}
!86 = !DITemplateTypeParameter(name: "T", type: !29)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !81, file: !23, baseType: !88, size: 128, align: 64, extraData: i64 1)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !78, file: !23, size: 128, align: 64, elements: !89, templateParams: !85, identifier: "edae92f6aa2d4d3d8225245fd9f15299::Some")
!89 = !{!90}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !88, file: !23, baseType: !29, size: 64, align: 64, offset: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, scope: !79, file: !23, baseType: !92, size: 64, align: 64, flags: DIFlagArtificial)
!92 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<usize>", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!94 = !{!70, !95}
!95 = !DILocalVariable(name: "n", scope: !96, file: !72, line: 510, type: !29, align: 8)
!96 = distinct !DILexicalBlock(scope: !71, file: !72, line: 510, column: 13)
!97 = !{!98}
!98 = !DITemplateTypeParameter(name: "A", type: !29)
!99 = !DILocation(line: 0, scope: !71, inlinedAt: !100)
!100 = distinct !DILocation(line: 14, column: 14, scope: !63)
!101 = !DILocation(line: 1137, column: 52, scope: !102, inlinedAt: !114)
!102 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h697d7385366f3475E", scope: !104, file: !103, line: 1137, type: !107, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, templateParams: !5, retainedNodes: !111)
!103 = !DIFile(filename: "/benchdata/rust/rust/src/libcore/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "a4329b033234040c2caa81654f112278")
!104 = !DINamespace(name: "{{impl}}", scope: !105)
!105 = !DINamespace(name: "impls", scope: !106)
!106 = !DINamespace(name: "cmp", scope: !26)
!107 = !DISubroutineType(types: !108)
!108 = !{!109, !110, !110}
!109 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !29, size: 64, align: 64, dwarfAddressSpace: 0)
!111 = !{!112, !113}
!112 = !DILocalVariable(name: "self", arg: 1, scope: !102, file: !103, line: 1137, type: !110)
!113 = !DILocalVariable(name: "other", arg: 2, scope: !102, file: !103, line: 1137, type: !110)
!114 = distinct !DILocation(line: 505, column: 12, scope: !71, inlinedAt: !100)
!115 = !DILocation(line: 505, column: 9, scope: !71, inlinedAt: !100)
!116 = !DILocation(line: 17, column: 2, scope: !45)
!117 = !DILocalVariable(name: "start", arg: 1, scope: !118, file: !72, line: 191, type: !29)
!118 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hf3e4aa5239d3229aE", scope: !73, file: !72, line: 191, type: !119, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, templateParams: !5, retainedNodes: !121)
!119 = !DISubroutineType(types: !120)
!120 = !{!29, !29, !29}
!121 = !{!117, !122}
!122 = !DILocalVariable(name: "n", arg: 2, scope: !118, file: !72, line: 191, type: !29)
!123 = !DILocation(line: 0, scope: !118, inlinedAt: !124)
!124 = distinct !DILocation(line: 510, column: 30, scope: !71, inlinedAt: !100)
!125 = !DILocalVariable(name: "self", arg: 1, scope: !126, file: !127, line: 3022, type: !29)
!126 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17he27be0fa2186d468E", scope: !128, file: !127, line: 3022, type: !119, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3, templateParams: !5, retainedNodes: !130)
!127 = !DIFile(filename: "/benchdata/rust/rust/src/libcore/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "b610d63e687c1bb61890b7290628f313")
!128 = !DINamespace(name: "{{impl}}", scope: !129)
!129 = !DINamespace(name: "num", scope: !26)
!130 = !{!125, !131}
!131 = !DILocalVariable(name: "rhs", arg: 2, scope: !126, file: !127, line: 3022, type: !29)
!132 = !DILocation(line: 0, scope: !126, inlinedAt: !133)
!133 = distinct !DILocation(line: 193, column: 22, scope: !118, inlinedAt: !124)
!134 = !DILocation(line: 0, scope: !63)
!135 = !DILocation(line: 0, scope: !67)
!136 = !DILocation(line: 15, column: 9, scope: !67)
!137 = !{!"branch_weights", i32 1, i32 2000}
!138 = !DILocation(line: 3025, column: 26, scope: !126, inlinedAt: !133)
!139 = !DILocation(line: 15, column: 18, scope: !67)
!140 = distinct !DISubprogram(name: "perf_mot", scope: !8, file: !7, line: 22, type: !46, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3, templateParams: !5, retainedNodes: !141)
!141 = !{!142, !143, !144, !146, !148, !150}
!142 = !DILocalVariable(name: "src", arg: 1, scope: !140, file: !7, line: 22, type: !48)
!143 = !DILocalVariable(name: "dst", arg: 2, scope: !140, file: !7, line: 22, type: !53)
!144 = !DILocalVariable(name: "iter", scope: !145, file: !7, line: 23, type: !22, align: 8)
!145 = distinct !DILexicalBlock(scope: !140, file: !7, line: 23, column: 5)
!146 = !DILocalVariable(name: "__next", scope: !147, file: !7, line: 23, type: !29, align: 8)
!147 = distinct !DILexicalBlock(scope: !145, file: !7, line: 23, column: 14)
!148 = !DILocalVariable(name: "val", scope: !149, file: !7, line: 23, type: !29, align: 8)
!149 = distinct !DILexicalBlock(scope: !147, file: !7, line: 23, column: 9)
!150 = !DILocalVariable(name: "i", scope: !151, file: !7, line: 23, type: !29, align: 8)
!151 = distinct !DILexicalBlock(scope: !147, file: !7, line: 23, column: 14)
!152 = !DILocation(line: 0, scope: !140)
!153 = !DILocation(line: 0, scope: !145)
!154 = !DILocation(line: 0, scope: !71, inlinedAt: !155)
!155 = distinct !DILocation(line: 23, column: 14, scope: !147)
!156 = !DILocation(line: 1137, column: 52, scope: !102, inlinedAt: !157)
!157 = distinct !DILocation(line: 505, column: 12, scope: !71, inlinedAt: !155)
!158 = !DILocation(line: 505, column: 9, scope: !71, inlinedAt: !155)
!159 = !DILocation(line: 25, column: 13, scope: !151)
!160 = !DILocation(line: 0, scope: !147)
!161 = !DILocation(line: 0, scope: !151)
!162 = !DILocation(line: 28, column: 2, scope: !140)
!163 = distinct !DISubprogram(name: "transformation", scope: !8, file: !7, line: 33, type: !46, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3, templateParams: !5, retainedNodes: !164)
!164 = !{!165, !166, !167, !169, !171, !173, !175, !177, !179, !181}
!165 = !DILocalVariable(name: "src", arg: 1, scope: !163, file: !7, line: 33, type: !48)
!166 = !DILocalVariable(name: "dst", arg: 2, scope: !163, file: !7, line: 33, type: !53)
!167 = !DILocalVariable(name: "iter", scope: !168, file: !7, line: 35, type: !22, align: 8)
!168 = distinct !DILexicalBlock(scope: !163, file: !7, line: 35, column: 9)
!169 = !DILocalVariable(name: "__next", scope: !170, file: !7, line: 35, type: !29, align: 8)
!170 = distinct !DILexicalBlock(scope: !168, file: !7, line: 35, column: 18)
!171 = !DILocalVariable(name: "val", scope: !172, file: !7, line: 35, type: !29, align: 8)
!172 = distinct !DILexicalBlock(scope: !170, file: !7, line: 35, column: 13)
!173 = !DILocalVariable(name: "i", scope: !174, file: !7, line: 35, type: !29, align: 8)
!174 = distinct !DILexicalBlock(scope: !170, file: !7, line: 35, column: 18)
!175 = !DILocalVariable(name: "iter", scope: !176, file: !7, line: 39, type: !22, align: 8)
!176 = distinct !DILexicalBlock(scope: !163, file: !7, line: 39, column: 9)
!177 = !DILocalVariable(name: "__next", scope: !178, file: !7, line: 39, type: !29, align: 8)
!178 = distinct !DILexicalBlock(scope: !176, file: !7, line: 39, column: 18)
!179 = !DILocalVariable(name: "val", scope: !180, file: !7, line: 39, type: !29, align: 8)
!180 = distinct !DILexicalBlock(scope: !178, file: !7, line: 39, column: 13)
!181 = !DILocalVariable(name: "i", scope: !182, file: !7, line: 39, type: !29, align: 8)
!182 = distinct !DILexicalBlock(scope: !178, file: !7, line: 39, column: 18)
!183 = !DILocation(line: 0, scope: !163)
!184 = !DILocation(line: 34, column: 8, scope: !163)
!185 = !DILocation(line: 34, column: 5, scope: !163)
!186 = !DILocation(line: 0, scope: !176)
!187 = !DILocation(line: 0, scope: !71, inlinedAt: !188)
!188 = distinct !DILocation(line: 39, column: 18, scope: !178)
!189 = !DILocation(line: 505, column: 9, scope: !71, inlinedAt: !188)
!190 = !DILocation(line: 0, scope: !168)
!191 = !DILocation(line: 0, scope: !71, inlinedAt: !192)
!192 = distinct !DILocation(line: 35, column: 18, scope: !170)
!193 = !DILocation(line: 505, column: 9, scope: !71, inlinedAt: !192)
!194 = !DILocation(line: 0, scope: !118, inlinedAt: !195)
!195 = distinct !DILocation(line: 510, column: 30, scope: !71, inlinedAt: !192)
!196 = !DILocation(line: 0, scope: !126, inlinedAt: !197)
!197 = distinct !DILocation(line: 193, column: 22, scope: !118, inlinedAt: !195)
!198 = !DILocation(line: 0, scope: !170)
!199 = !DILocation(line: 0, scope: !174)
!200 = !DILocation(line: 36, column: 13, scope: !174)
!201 = !DILocation(line: 3025, column: 26, scope: !126, inlinedAt: !197)
!202 = !DILocation(line: 36, column: 22, scope: !174)
!203 = !DILocation(line: 1137, column: 52, scope: !102, inlinedAt: !204)
!204 = distinct !DILocation(line: 505, column: 12, scope: !71, inlinedAt: !192)
!205 = !DILocation(line: 0, scope: !118, inlinedAt: !206)
!206 = distinct !DILocation(line: 510, column: 30, scope: !71, inlinedAt: !188)
!207 = !DILocation(line: 0, scope: !126, inlinedAt: !208)
!208 = distinct !DILocation(line: 193, column: 22, scope: !118, inlinedAt: !206)
!209 = !DILocation(line: 0, scope: !178)
!210 = !DILocation(line: 0, scope: !182)
!211 = !DILocation(line: 40, column: 13, scope: !182)
!212 = !DILocation(line: 3025, column: 26, scope: !126, inlinedAt: !208)
!213 = !DILocation(line: 40, column: 22, scope: !182)
!214 = !DILocation(line: 1137, column: 52, scope: !102, inlinedAt: !215)
!215 = distinct !DILocation(line: 505, column: 12, scope: !71, inlinedAt: !188)
!216 = !DILocation(line: 43, column: 2, scope: !163)
